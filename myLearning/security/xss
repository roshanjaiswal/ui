Cross-Site Scripting (XSS) Attacks
----------------------------------------

-> Cross-site scripting, commonly referred to as XSS,
  occurs when hackers execute malicious JavaScript within a victim’s browser.
->

-> Cross-Site Scripting (XSS) attacks occur when:
    - Data enters a Web application through an untrusted source, most frequently a web request.
    - The data is included in dynamic content that is sent to a web user without being validated for malicious content.


-> Types:-
    - Stored (Persistent/Type-I) Cross-Site Scripting
        -- injected script is permanently stored on the target servers
        -- such as in a database, in a message forum, visitor log, comment field, etc.
        -- The victim then retrieves the malicious script from the server when it requests the stored information.
    - Reflected Cross-Site Scripting
    - Self Cross-Site Scripting
    - Blind Cross-Site Scripting
        -- attacker’s payload is saved on the server and reflected back to the victim
        -- example in feedback forms
        -- backend user/admin of the application will open the attacker’s submitted form via the backend application, the attacker’s payload will get executed
    - DOM-Based Cross-Site Scripting
    -
    -

-> How to Prevent Cross-Site Scripting Attacks?
    - Allowlist Values
    - Avoid and Restrict HTML in Inputs
    - Sanitize Values
    - Use HTTPOnly Flags on Cookies
    - Use a WAF to Protect against Cross-Site Scripting Attacks

-> Post-Hack Actions
    - Locate Vulnerable Code
    - Remove Malicious Content and Backdoors
    - Patch the Vulnerability
    - Update Your Credentials
    - Set Up a WAF


Remote Code Execution (RCE) attacks
------------------------------------------